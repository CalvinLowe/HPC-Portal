[
    [
        "Nimrod"
    ],
    {
        "Nimrod": {
            "loginHost": null,
            "username": null,
           	"messageRegexs": [
                {
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "Commands": {
		    "listFolderBase64": {
                    	"async": true,
                   	"cmd": "echo {folderpath} | base64 --decode | xargs -d '\n' ls -lh",
                   	"failFatal": true,
                    	"formatFatal": false,
                    	"host": "login",
                    	"loop": false,
                    	"regex": [
                        	"(?P<permission>[^ ]+) +(?P<links>[0-9]+) +(?P<owner>[^ ]+) +(?P<group>[^ ]+) +(?P<size>[^ ]+) +(?P<modm>[^ ]+) +(?P<modd>[0-9]+) +(?P<mody>[^ ]+) +(?P<name>.*)"
                    	],
                    	"requireMatch": true
                    },
	           "getProjects": {
	                "async": false,
	                "cmd": "\"groups | sed 's@ @\\n@g'\"",
	                "failFatal": true,
	                "formatFatal": false,
	                "host": "login",
	                "loop": false,
	                "regex": [
	                    "^\\s*(?P<group>\\S+)\\s*$"
	                ],
	                "requireMatch": true
	            },
	            "listAll":{
	                "async": false,
	                "cmd": "\"qstat | tail -n -1 |sed -e's/  */;/g' | cut -d';' -f 1-4,10-11\"",
	                "failFatal": true,
	                "formatFatal": false,
	                "host": "login",
	                "loop": false,
	                "regex": [
	                    "^(?P<jobid>(?P<jobidNumber>[0-9]+).*);(?P<username>.*);(?P<queue>.*);(?P<jobname>.*);(?P<state>.*);(?P<elapTime>.*)$"
	                ],
	                "requireMatch": true
	            }
            }
        }
    }
]
